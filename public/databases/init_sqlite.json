[
  "CREATE TABLE IF NOT EXISTS curriculum ( id TEXT PRIMARY KEY, name TEXT NOT NULL, image TEXT, description TEXT, sort_index INTEGER, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0);",
  "CREATE TABLE IF NOT EXISTS subject ( id TEXT PRIMARY KEY, name TEXT NOT NULL, image TEXT, description TEXT, sort_index INTEGER, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0);",
  "CREATE TABLE IF NOT EXISTS grade ( id TEXT PRIMARY KEY, name TEXT NOT NULL, image TEXT, description TEXT, sort_index INTEGER, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0);",
  "CREATE TABLE IF NOT EXISTS language ( id TEXT PRIMARY KEY, name TEXT NOT NULL, image TEXT, description TEXT, sort_index INTEGER, code TEXT, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0);",
  "CREATE TABLE IF NOT EXISTS badge ( id TEXT PRIMARY KEY, name TEXT NOT NULL, image TEXT, description TEXT, updated_at TEXT DEFAULT (datetime ('now')), created_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0);",
  "CREATE TABLE IF NOT EXISTS course ( id TEXT PRIMARY KEY, name TEXT NOT NULL, image TEXT, description TEXT, sort_index INTEGER, subject_id TEXT, grade_id TEXT, curriculum_id TEXT, color TEXT, code TEXT, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (subject_id) REFERENCES subject (id), FOREIGN KEY (grade_id) REFERENCES grade (id), FOREIGN KEY (curriculum_id) REFERENCES curriculum (id));",
  "CREATE TABLE IF NOT EXISTS sticker ( id TEXT PRIMARY KEY, name TEXT NOT NULL, image TEXT, description TEXT, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0);",
  "CREATE TABLE IF NOT EXISTS reward (id TEXT NOT NULL,created_at TEXT NOT NULL DEFAULT (datetime('now')),updated_at TEXT DEFAULT (datetime('now')),is_deleted BOOLEAN DEFAULT 0,monthly TEXT,weekly TEXT,weeklySticker TEXT,year INTEGER NOT NULL,PRIMARY KEY (id));",
  "CREATE TABLE IF NOT EXISTS school ( id TEXT PRIMARY KEY, name TEXT NOT NULL, group1 TEXT, group2 TEXT, group3 TEXT, image TEXT, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0);",
  "CREATE TABLE IF NOT EXISTS chapter ( id TEXT PRIMARY KEY, name TEXT, image TEXT, course_id TEXT, sort_index INTEGER, sub_topics TEXT, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (course_id) REFERENCES course (id));",
  "CREATE TABLE IF NOT EXISTS lesson ( id TEXT PRIMARY KEY, name TEXT, image TEXT, outcome TEXT, plugin_type TEXT, status TEXT, cocos_subject_code TEXT, cocos_chapter_code TEXT, cocos_lesson_id TEXT, created_by TEXT, subject_id TEXT, target_age_from INTEGER, target_age_to INTEGER, language_id TEXT, color TEXT, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (subject_id) REFERENCES subject (id), FOREIGN KEY (language_id) REFERENCES language (id));",
  "CREATE TABLE IF NOT EXISTS class ( id TEXT PRIMARY KEY, name TEXT NOT NULL, image TEXT, school_id TEXT NOT NULL, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (school_id) REFERENCES school (id));",
  "CREATE TABLE IF NOT EXISTS user ( id TEXT PRIMARY KEY, name TEXT, email TEXT, phone TEXT, gender TEXT, image TEXT, avatar TEXT, language_id TEXT, curriculum_id TEXT, age INTEGER, grade_id TEXT, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, is_tc_accepted INTEGER DEFAULT 0, music_off INTEGER DEFAULT 0, sfx_off INTEGER DEFAULT 0, FOREIGN KEY (language_id) REFERENCES language (id), FOREIGN KEY (curriculum_id) REFERENCES curriculum (id), FOREIGN KEY (grade_id) REFERENCES grade (id));",
  "CREATE TABLE IF NOT EXISTS class_invite_code ( id TEXT PRIMARY KEY, code INTEGER NOT NULL, expires_at TEXT NOT NULL, class_id TEXT NOT NULL, is_class_code INTEGER DEFAULT 1, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (class_id) REFERENCES class (id));",
  "CREATE TABLE IF NOT EXISTS class_user ( id TEXT PRIMARY KEY, class_id TEXT NOT NULL, user_id TEXT NOT NULL, role TEXT, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (class_id) REFERENCES class (id), FOREIGN KEY (user_id) REFERENCES 'user' (id));",
  "CREATE TABLE IF NOT EXISTS favorite_lesson ( id TEXT PRIMARY KEY, lesson_id TEXT NOT NULL, user_id TEXT NOT NULL, role TEXT, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (lesson_id) REFERENCES lesson (id), FOREIGN KEY (user_id) REFERENCES 'user' (id));",
  "CREATE TABLE IF NOT EXISTS class_course ( id TEXT PRIMARY KEY, class_id TEXT NOT NULL, course_id TEXT NOT NULL, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (class_id) REFERENCES class (id), FOREIGN KEY (course_id) REFERENCES course (id));",
  "CREATE TABLE IF NOT EXISTS chapter_lesson ( id TEXT PRIMARY KEY, lesson_id TEXT NOT NULL, chapter_id TEXT NOT NULL, sort_index INTEGER, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (chapter_id) REFERENCES chapter (id), FOREIGN KEY (lesson_id) REFERENCES lesson (id));",
  "CREATE TABLE IF NOT EXISTS parent_user ( id TEXT PRIMARY KEY, parent_id TEXT NOT NULL, student_id TEXT NOT NULL, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (parent_id) REFERENCES 'user' (id), FOREIGN KEY (student_id) REFERENCES 'user' (id));",
  "CREATE TABLE IF NOT EXISTS school_course ( id TEXT PRIMARY KEY, school_id TEXT NOT NULL, course_id TEXT NOT NULL, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (course_id) REFERENCES course (id), FOREIGN KEY (school_id) REFERENCES school (id));",
  "CREATE TABLE IF NOT EXISTS school_user ( id TEXT PRIMARY KEY, school_id TEXT NOT NULL, user_id TEXT NOT NULL, role TEXT, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (school_id) REFERENCES school (id), FOREIGN KEY (user_id) REFERENCES 'user' (id));",
  "CREATE TABLE IF NOT EXISTS user_badge ( id TEXT PRIMARY KEY, user_id TEXT NOT NULL, badge_id TEXT NOT NULL, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (badge_id) REFERENCES badge (id), FOREIGN KEY (user_id) REFERENCES 'user' (id));",
  "CREATE TABLE IF NOT EXISTS user_bonus ( id TEXT PRIMARY KEY, user_id TEXT NOT NULL, bonus_id TEXT NOT NULL, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (bonus_id) REFERENCES lesson (id), FOREIGN KEY (user_id) REFERENCES 'user' (id));",
  "CREATE TABLE IF NOT EXISTS user_course ( id TEXT PRIMARY KEY, user_id TEXT NOT NULL, course_id TEXT NOT NULL, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (course_id) REFERENCES course (id), FOREIGN KEY (user_id) REFERENCES 'user' (id));",
  "CREATE TABLE IF NOT EXISTS user_sticker ( id TEXT PRIMARY KEY, user_id TEXT NOT NULL, sticker_id TEXT NOT NULL, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (sticker_id) REFERENCES sticker (id), FOREIGN KEY (user_id) REFERENCES 'user' (id));",
  "CREATE TABLE IF NOT EXISTS assignment ( id TEXT PRIMARY KEY, created_by TEXT, starts_at TEXT NOT NULL DEFAULT (datetime ('now')), ends_at TEXT, is_class_wise INTEGER NOT NULL DEFAULT 0, class_id TEXT NOT NULL, school_id TEXT NOT NULL, lesson_id TEXT NOT NULL, type TEXT, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (class_id) REFERENCES class (id), FOREIGN KEY (created_by) REFERENCES 'user' (id), FOREIGN KEY (lesson_id) REFERENCES lesson (id), FOREIGN KEY (school_id) REFERENCES school (id));",
  "CREATE TABLE IF NOT EXISTS assignment_user ( id TEXT PRIMARY KEY, assignment_id TEXT NOT NULL, user_id TEXT NOT NULL, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (assignment_id) REFERENCES assignment (id), FOREIGN KEY (user_id) REFERENCES 'user' (id));",
  "CREATE TABLE IF NOT EXISTS chatbot ( id TEXT PRIMARY KEY, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0);",
  "CREATE TABLE IF NOT EXISTS result ( id TEXT PRIMARY KEY, assignment_id TEXT, lesson_id TEXT, school_id TEXT, score INTEGER, student_id TEXT NOT NULL, correct_moves INTEGER, time_spent INTEGER, wrong_moves INTEGER, created_at TEXT DEFAULT (datetime ('now')), updated_at TEXT DEFAULT (datetime ('now')), is_deleted INTEGER DEFAULT 0, FOREIGN KEY (assignment_id) REFERENCES assignment (id), FOREIGN KEY (lesson_id) REFERENCES lesson (id), FOREIGN KEY (school_id) REFERENCES school (id), FOREIGN KEY (student_id) REFERENCES 'user' (id));",
  "CREATE TABLE IF NOT EXISTS pull_sync_info ( table_name TEXT NOT NULL PRIMARY KEY, last_pulled TIMESTAMP NOT NULL);",
  "CREATE TABLE IF NOT EXISTS push_sync_info ( id TEXT NOT NULL PRIMARY KEY, table_name TEXT NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, change_type TEXT NOT NULL, data TEXT NOT NULL);"
]
